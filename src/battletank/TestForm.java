/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package battletank;

import java.awt.Color;
import java.awt.Label;
import java.awt.image.BufferedImage;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Administrator
 */
public class TestForm extends javax.swing.JFrame {

    //variable Game : contain all things of a game
    /**
     *
     */
    Game game;
   
    String setting = new String();
    String tanksinfo = new String();
    String betreportA = new String();
    String betreportB = new String();
    String placereportA = new String();
    String placereportB = new String();
    String decisionA = new String();
    String decisionB = new String();
        String decisionActionA = new String();
    String decisionActionB = new String();
        String tankA = new String();
    String tankB = new String();

    public TestForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSetting = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtTanksInfo = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtBetReportA = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtBetReportB = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDecisionA = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtDecisionB = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtPlaceReportB = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtPlaceReportA = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtDecisionActionA = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        txtDecisionActionB = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        txtTankB = new javax.swing.JTextArea();
        jScrollPane12 = new javax.swing.JScrollPane();
        txtTankA = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton1.setText("Update");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        txtSetting.setColumns(20);
        txtSetting.setRows(5);
        jScrollPane2.setViewportView(txtSetting);

        jLabel1.setText("STATISTIC");

        txtTanksInfo.setColumns(20);
        txtTanksInfo.setRows(5);
        txtTanksInfo.setAutoscrolls(false);
        jScrollPane3.setViewportView(txtTanksInfo);

        jLabel2.setText("TANKS INFO");

        jLabel3.setText("BET REPORT A");

        txtBetReportA.setColumns(20);
        txtBetReportA.setRows(5);
        txtBetReportA.setAutoscrolls(false);
        jScrollPane4.setViewportView(txtBetReportA);

        jLabel4.setText("BET REORT B");

        txtBetReportB.setColumns(20);
        txtBetReportB.setRows(5);
        txtBetReportB.setAutoscrolls(false);
        jScrollPane5.setViewportView(txtBetReportB);

        jLabel5.setText("DECSION A");

        txtDecisionA.setColumns(20);
        txtDecisionA.setRows(5);
        txtDecisionA.setAutoscrolls(false);
        jScrollPane1.setViewportView(txtDecisionA);

        jLabel6.setText("DECSION B");

        txtDecisionB.setColumns(20);
        txtDecisionB.setRows(5);
        txtDecisionB.setAutoscrolls(false);
        jScrollPane6.setViewportView(txtDecisionB);

        txtPlaceReportB.setColumns(20);
        txtPlaceReportB.setRows(5);
        txtPlaceReportB.setAutoscrolls(false);
        jScrollPane7.setViewportView(txtPlaceReportB);

        jLabel7.setText("PLACE REORT A");

        txtPlaceReportA.setColumns(20);
        txtPlaceReportA.setRows(5);
        txtPlaceReportA.setAutoscrolls(false);
        jScrollPane8.setViewportView(txtPlaceReportA);

        jLabel8.setText("PLACE REORT B");

        jLabel9.setText("DECISION ACTION A");

        txtDecisionActionA.setColumns(20);
        txtDecisionActionA.setRows(5);
        txtDecisionActionA.setAutoscrolls(false);
        jScrollPane9.setViewportView(txtDecisionActionA);

        jLabel10.setText("DECSION ACTION B");

        txtDecisionActionB.setColumns(20);
        txtDecisionActionB.setRows(5);
        txtDecisionActionB.setAutoscrolls(false);
        jScrollPane10.setViewportView(txtDecisionActionB);

        jLabel11.setText("Tank A");

        jLabel12.setText("Tank B");

        txtTankB.setColumns(20);
        txtTankB.setRows(5);
        txtTankB.setAutoscrolls(false);
        jScrollPane11.setViewportView(txtTankB);

        txtTankA.setColumns(20);
        txtTankA.setRows(5);
        txtTankA.setAutoscrolls(false);
        jScrollPane12.setViewportView(txtTankA);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(jLabel1)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(104, 104, 104)
                                .addComponent(jLabel3)
                                .addGap(148, 148, 148)
                                .addComponent(jLabel4)
                                .addGap(99, 99, 99))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1)
                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel10)
                                            .addGap(80, 80, 80))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(93, 93, 93)
                                                    .addComponent(jLabel5))
                                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(0, 0, Short.MAX_VALUE))))
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(jLabel6)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(73, 73, 73)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel7)
                .addGap(168, 168, 168)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(84, 84, 84))
            .addGroup(layout.createSequentialGroup()
                .addGap(547, 547, 547)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane4)
                                    .addComponent(jScrollPane5))))
                        .addGap(10, 10, 10)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane11)
                                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                                    .addComponent(jScrollPane8)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(6, 6, 6))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        this.runTest();
    }//GEN-LAST:event_jButton1MouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
game = new Game(1);
        //set setting
       

        try {
            game.getReport().readReportTank(game);   
        } catch (FileNotFoundException ex) {
            Logger.getLogger(TestForm.class.getName()).log(Level.SEVERE, null, ex);
        }

        for (int i = 0; i < game.getSetting().getNumOfTank(); i++) {
            tanksinfo += (game.getTanks()[i].getAmor() + " " + game.getTanks()[i].getDamange() + " " + game.getTanks()[i].getAttackRange()) + "\n";
        }
        
        // first time
         // show current statistic
        setting = ("MATCH : " + game.getSetting().getMatchID());
        setting += "\n" + ("TEAM A : " + game.getSetting().getNameTeamA());
        setting += "\n" + ("TEAM B : " + game.getSetting().getNameTeamB());
        setting += "\n" + ("NUM OF TANK : " + game.getSetting().getNumOfTank());
        setting += "\n" + ("DEFAULT MONEY : " + game.getSetting().getDefaultMoney());
        setting += "\n" + ("NUM OF TURN : " + game.getSetting().getNumOfTurn());
         setting += "\n" + ("NUM OF TURN : " + game.getSetting().getNumOfTurn());
         
        setting += "\n\n" + ("========") + "\n\n" ;
        setting += "\n" + ("CURRENT BET TURN : " + game.getSetting().getCurrentBetTurn());
        setting += "\n" + ("MONEY TEAM A : " + game.getTeamA().getMoney());
        setting += "\n" + ("MONEY TEAM B: " + game.getTeamB().getMoney());
        setting += "\n" + ("GAME STATE : " + game.getSetting().getGameState());
        setting += "\n" + ("CURRENT TEAM ACTION : " + game.getSetting().getCurrentTeamAction());
        setting += "\n" + ("WINNER : " + game.getSetting().getWinner());
           this.txtSetting.setText(setting);
            this.txtTanksInfo.setText(tanksinfo);
       
           tankA = ""; tankB = "";
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestForm().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea txtBetReportA;
    private javax.swing.JTextArea txtBetReportB;
    private javax.swing.JTextArea txtDecisionA;
    private javax.swing.JTextArea txtDecisionActionA;
    private javax.swing.JTextArea txtDecisionActionB;
    private javax.swing.JTextArea txtDecisionB;
    private javax.swing.JTextArea txtPlaceReportA;
    private javax.swing.JTextArea txtPlaceReportB;
    private javax.swing.JTextArea txtSetting;
    private javax.swing.JTextArea txtTankA;
    private javax.swing.JTextArea txtTankB;
    private javax.swing.JTextArea txtTanksInfo;
    // End of variables declaration//GEN-END:variables

    public void runTest() {
        // update Game
        game.updateGame();
        // show current statistic
        setting = ("MATCH : " + game.getSetting().getMatchID());
        setting += "\n" + ("TEAM A : " + game.getSetting().getNameTeamA());
        setting += "\n" + ("TEAM B : " + game.getSetting().getNameTeamB());
        setting += "\n" + ("NUM OF TANK : " + game.getSetting().getNumOfTank());
        setting += "\n" + ("DEFAULT MONEY : " + game.getSetting().getDefaultMoney());
        setting += "\n" + ("NUM OF TURN : " + game.getSetting().getNumOfTurn());
         setting += "\n" + ("NUM OF TURN : " + game.getSetting().getNumOfTurn());
         
        setting += "\n\n" + ("========") + "\n\n" ;
        setting += "\n" + ("CURRENT BET TURN : " + game.getSetting().getCurrentBetTurn());
        setting += "\n" + ("MONEY TEAM A : " + game.getTeamA().getMoney());
        setting += "\n" + ("MONEY TEAM B: " + game.getTeamB().getMoney());
        setting += "\n" + ("GAME STATE : " + game.getSetting().getGameState());
        setting += "\n" + ("CURRENT TEAM ACTION : " + game.getSetting().getCurrentTeamAction());
        setting += "\n" + ("WINNER : " + game.getSetting().getWinner());
        
        betreportA = "TEAM A HISTORY BET\n";
        // show teams's history decision
        for (int i = 1; i < game.getSetting().getCurrentBetTurn() ; i++) {
            betreportA += i+ ". " + game.getTeamA().getDecisiontBet()[i].getPrice() + "\n";
        }
        betreportB = "TEAM B HISTORY BET\n";
        // show teams's history decision
        for (int i = 1; i < game.getSetting().getCurrentBetTurn() ; i++) {
            betreportB += i+ ". " + game.getTeamB().getDecisiontBet()[i].getPrice() + "\n";
        }

        // show teams's decisions
        decisionA = game.getTeamA().getDecisiontBet()[game.getSetting().getCurrentBetTurn() - 1].getPrice() + "";
        decisionB = game.getTeamB().getDecisiontBet()[game.getSetting().getCurrentBetTurn() - 1].getPrice() + "";
       
        //show placcing decision of teeams
       try{  
        int i = 0 ;
        placereportA= game.getTeamA().getTeamName()+"\n";
        
        // read teams's decision place
        while ( game.getTeamA().getDecisionPlace()[i]!=null ) {
            placereportA += "( "+ game.getTeamA().getDecisionPlace()[i].getPosition().getX() ; 
            placereportA += " ,  " + game.getTeamA().getDecisionPlace()[i].getPosition().getY() +")\n"; 
            i++;
        }
        
          i = 0 ; 
         placereportB= game.getTeamB().getTeamName()+"\n";
        // read teams's decision place
        while ( game.getTeamB().getDecisionPlace()[i]!=null ) {
            placereportB += "( "+ game.getTeamB().getDecisionPlace()[i].getPosition().getX() ; 
            placereportB +=" ,  " + game.getTeamB().getDecisionPlace()[i].getPosition().getY()  +")\n"; 
            i++;
        }
         }
       catch(Exception ex) {} 
       
       if ( game.getSetting().getGameState()== Setting.GAME_STATE.ACTION ) {
            BattleScreen bg = new BattleScreen(this.game);
        bg.setVisible(true);
       
       }
       // set tank info
       tankA="";
       for (int i =0; i < game.getTeamA().getNumOfTank(); i ++)
           tankA += (game.getTeamA().getTanks()[i].getAmor() + " " + game.getTeamA().getTanks()[i].getDamange() + " " + game.getTeamA().getTanks()[i].getAttackRange()) + "\n\n";
        tankB="";
       for (int  i =0; i < game.getTeamB().getNumOfTank(); i ++)
           tankB += (game.getTeamB().getTanks()[i].getAmor() + " " + game.getTeamB().getTanks()[i].getDamange() + " " + game.getTeamB().getTanks()[i].getAttackRange()) + "\n\n";
        
       
        this.txtSetting.setText(setting);
       
        this.txtDecisionA.setText(decisionA);
        this.txtDecisionB.setText(decisionB);
        this.txtBetReportA.setText(betreportA);
        this.txtBetReportB.setText(betreportB);
        this.txtPlaceReportA.setText(placereportA);
        this.txtPlaceReportB.setText(placereportB);
        this.txtTankA.setText(tankA);
        this.txtTankB.setText(tankB);
        
      
      
    
    }

}
